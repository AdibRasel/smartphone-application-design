========== Command List ==========

1 > ionic start FrontEnd blank --type=react --cordova
    = [ERROR] Ionic doesn't support using Cordova with @ionic/react projects.
    = ionic integrations enable capacitor --quiet -- FrontEnd io.ionic.starter
    > npm.cmd i --save -E @capacitor/core@latest
    ionic এর সাথে cordova কোরডোবা সাপোর্ট করে না, যার কারনে সে নিজে নিজে capacitor ক্যপাসিটর কে ডাউনলোড করে নিচ্ছে। 

2 > npm install -g @ionic/cli

3 > cd .\FrontEnd\

4 > npm install -g @ionic/cli

5 > ionic serve

6 > antoher terminal > cd .\FrontEnd\ > ionic build 
    ৬ > "ionic build" কমান্ডটি ব্যবহার হয় তখন যখন আপনি আপনার Ionic এপ্লিকেশনটির সোর্স কোড বা সম্প্রদানের ফাইলগুলি প্রোডাকশনের জন্য সংকৃত এবং প্রকাশ্য করতে চান। এই কমান্ডটি দ্বারা আপনি আপনার এপ্লিকেশন এবং সম্প্রদানের ফাইলগুলি প্রোডাকশনের জন্য যেসব ব্যবস্থানে সংকৃত করতে হবে তা তৈরি হয়।

    "ionic build" কমান্ড বিভিন্ন প্ল্যাটফর্মের জন্য ব্যবহার করা যেতে পারে, যেমন Android, iOS, এবং ওয়েব প্ল্যাটফর্ম। প্ল্যাটফর্মটি আপনি বাছাই করতে পারেন এবং আপনি যে প্ল্যাটফর্মে আপনার এপ্লিকেশনটি প্রকাশ করতে চান তা অনুসরণ করতে পারেন।

    এই কমান্ডটি ব্যবহার করে আপনি আপনার এপ্লিকেশনটি প্রকাশন সাজাতে পারেন এবং সামগ্রিক ডেভেলপমেন্ট প্রস্তুতি করতে পারেন, যাতে আপনি আপনার এপ্লিকেশনটি ব্যবহারকারীদের দেওয়ার জন্য প্রয়োজনীয় সাজানো সংস্করণ প্রদান করতে পারেন।


7 > ionic capacitor add android
    ৭ > "ionic capacitor add android" কমান্ডটি ব্যবহার হয় যখন আপনি আপনার Ionic এপ্লিকেশনটির Android প্ল্যাটফর্মের সাথে সম্পৃক্ত করতে চান। এই কমান্ডটি দ্বারা আপনি আপনার Ionic এপ্লিকেশনটির জন্য Android প্ল্যাটফর্মের স্পেসিফিক কোড এবং ডিপেন্ডেন্সিগুলি তৈরি করতে পারেন।

    এই কমান্ডটি ব্যবহার করে আপনি আপনার Ionic এপ্লিকেশনটির জন্য Android প্ল্যাটফর্ম যোগ করতে পারেন এবং এটির জন্য প্রয়োজনীয় কনফিগারেশন ফাইলগুলি তৈরি করতে পারেন। এর মাধ্যমে আপনি আপনার এপ্লিকেশনটি একটি Android প্ল্যাটফর্ম ডেভাইসে ইনস্টল করতে পারেন এবং ডেভেলপমেন্ট এবং টেস্টিং জন্য আপনার প্রজেক্টটি Android Studio বা অন্য যেকোনো Android ডেভেলপমেন্ট টুল দিয়ে সম্পৃক্ত করতে পারেন।

    সংক্ষেপে, "ionic capacitor add android" কমান্ডটি ব্যবহার করে আপনি আপনার Ionic এপ্লিকেশনটির Android প্ল্যাটফর্ম এবং এটির ডেভেলপমেন্ট টুলসেট যোগ করতে পারেন যাতে আপনি Android ডিভাইসে সরাসরি এপ্লিকেশন ডেভেলপ এবং টেস্ট করতে পারেন।


8 > ionic capacitor build android
    ৮ >  "ionic capacitor build android" কমান্ডটি আপনার Ionic এপ্লিকেশনটির Android প্ল্যাটফর্মের জন্য বিল্ড প্রসেসেস সহযোগিতা করে। এই কমান্ডটি ব্যবহার করে আপনি আপনার Ionic এপ্লিকেশনটির সোর্স কোড এবং ডিপেন্ডেন্সিগুলি সংকৃত এবং বিল্ড প্রসেসেসের জন্য প্রস্তুত করতে পারেন, যাতে আপনি এই এপ্লিকেশনটি Android প্ল্যাটফর্মে ডেভেলপ এবং প্রকাশ করতে পারেন।

    এই কমান্ডটি নিম্নলিখিত কাজগুলি করে:

    আপনার আপ্লিকেশনটির জন্য Android প্ল্যাটফর্মের প্রয়োজনীয় কনফিগারেশন ফাইলগুলি তৈরি করে।
    আপনার সোর্স কোড এবং সম্প্রদানের ফাইলগুলি অপ্টিমাইজ করে বিল্ড করে।
    আপনার আপ্লিকেশনটির Android প্ল্যাটফর্মের সংস্করণ তৈরি করে, যা একটি APK (Android Application Package) ফাইল হয়।
    আপনার প্রজেক্টটির Android প্ল্যাটফর্মের জন্য টোকেন সহ অন্যান্য সেটিংস কনফিগার করে।
    এই কমান্ডটি ব্যবহার করে আপনি আপনার Ionic এপ্লিকেশনটির Android প্ল্যাটফর্ম এবং এপ্লিকেশনটির বিল্ড প্রসেসেস সহযোগিতা প্রদান করতে পারেন, তাতে আপনি আপনার Android ডিভাইসে ইনস্টল করতে এবং টেস্ট করতে পারেন।


9 > ionic capacitor copy android 
    ৯ > "ionic capacitor copy android" কমান্ডটি কোনো নির্দিষ্ট বিল্ড প্রসেস বা অ্যাকশন পর্যাপ্ত করতে সাহায্য করে না, তবে এটি অত্যন্ত গুরুত্বপূর্ণ কাজ করে যা আপনার Ionic এপ্লিকেশনটির প্রজেক্ট ফাইলগুলি কিছু নির্দিষ্ট স্থানে সংকৃত করে।

    এই কমান্ডটি নিম্নলিখিত কাজগুলি করে:

    আপনার আপ্লিকেশনের সম্প্রদান ফাইলগুলি নির্দিষ্ট স্থানে কপি করে দেয়, যেখানে আপনি পরবর্তীতে এই সম্প্রদান ফাইলগুলি সংকৃত করতে পারেন।
    আপনার আপ্লিকেশনের সম্প্রদান ফাইলগুলির প্রতিটি প্রজেক্ট প্ল্যাটফর্মের জন্য সংকৃত করে দেয়, যাতে প্রত্যেক প্ল্যাটফর্ম স্পেসিফিক সম্প্রদান ফাইল ব্যবহার করতে পারে।
    এই কমান্ডটি অত্যন্ত গুরুত্বপূর্ণ হতে পারে যখন আপনি আপনার Ionic এপ্লিকেশনটির সম্প্রদান ফাইলগুলি বিভিন্ন প্ল্যাটফর্মে সংকৃত করতে চান, যেটি প্ল্যাটফর্ম-স্পেসিফিক অপারেশনগুলির সাথে সম্পৃক্ত হতে পারে, উদাহরণস্বরূপ আপনার প্ল্যাটফর্ম বা প্ল্যাটফর্ম-স্পেসিফিক স্থানীয় ডেটাবেসে ডেটা সংকৃত করার জন্য।

    সংক্ষেপে, "ionic capacitor copy android" কমান্ডটি আপনার Ionic এপ্লিকেশনটির সম্প্রদান ফাইলগুলি নির্দিষ্ট স্থানে সংকৃত করে দেয়, যাতে প্রতিটি প্ল্যাটফর্ম স্পেসিফিক সম্প্রদান ফাইল ব্যবহার করতে পারে।


10 > ionic capacitor open android 
    ১০ > "ionic capacitor open android" কমান্ডটি আপনার Ionic এপ্লিকেশনটির Android প্ল্যাটফর্ম ডেভেলপমেন্ট প্রসেসের জন্য Android Studio একটি প্রকল্প তৈরি করতে সাহায্য করে। এই কমান্ডটি ব্যবহার করে আপনি আপনার Ionic এপ্লিকেশনটির Android প্ল্যাটফর্ম ডেভেলপমেন্ট এবং টেস্টিং জন্য Android Studio ইনস্টল করা ডেভেলপমেন্ট সম্পৃক্ত প্রকল্পে অনুমোদন দেয়।

    যখন আপনি "ionic capacitor open android" কমান্ডটি ব্যবহার করেন, তখন Android Studio একটি প্রকল্প তৈরি করে তার ব্যাপারে নির্দিষ্ট সম্প্রদান ফোল্ডারে খোলবে এবং আপনার এপ্লিকেশনটির সোর্স কোড এবং প্রয়োজনীয় কনফিগারেশন ফাইলগুলি দেখাবে। এটি আপনাকে আপনার Android এপ্লিকেশনটি ডেভেলপ এবং ডেভেলপমেন্ট প্রস্তুতি করতে সাহায্য করবে, যেখানে আপনি কোড সম্পাদনা করতে পারেন, এমুলেটর বা ফিজিক্যাল Android ডিভাইসে অ্যাপ্লিকেশন টেস্ট করতে পারেন, এবং ডেভেলপমেন্ট প্রস্তুতি করতে পারেন।

    এই কমান্ডটি ডেভেলপমেন্ট প্রস্তুতির জন্য মূলত Android Studio ডেভেলপমেন্ট এবং টেস্টিং প্রসেসে সহযোগিতা করে এবং আপনাকে আপনার Android এপ্লিকেশনটির ডেভেলপমেন্ট কার্যক্রমগুলি সহজে সম্পাদনা করার জন্য একটি উপযুক্ত ডেভেলপমেন্ট প্রস্তুতি সরবরাহ করে।


নিচের কমান্ড গুলো দিতে হবে। কোনটার কি কাজ একটা একটা করে কমান্ড দিয়ে সব গুলো দেখতে হবে। 
11 > ionic capacitor run 
    ১১ > "ionic capacitor run" কমান্ডটি ব্যবহার হয় আপনার Ionic এপ্লিকেশনটি ডেভেলপমেন্ট এবং টেস্টিং উদ্দেশ্যে সম্প্রদান প্ল্যাটফর্মে ইনস্টল এবং চালাতে সাহায্য করে। এই কমান্ডটি সম্প্রদান প্ল্যাটফর্মে আপনার আপ্লিকেশনটি চালানোর জন্য ব্যবহার হয় এবং ডেভেলপমেন্ট এবং টেস্টিং উদ্দেশ্যে ব্যবহার করা যেতে পারে।

    এই কমান্ডটি নিম্নলিখিত কাজগুলি করে:

    ডেভেলপমেন্ট এবং টেস্টিং উদ্দেশ্যে আপনার আপ্লিকেশনটি আপনার সেটিংস এবং কনফিগারেশন সহ সম্প্রদান প্ল্যাটফর্মে ইনস্টল করে।
    প্ল্যাটফর্মে আপনার আপ্লিকেশনটি চালাতে সাহায্য করে, যেটি আপনার ডেভেলপমেন্ট কার্যক্রমগুলি পরিচালনা করে, এবং আপনাকে আপনার এপ্লিকেশনটি জুড়ে পরিকল্পিত সেটিংসে দেখায়।
    ডেভেলপমেন্ট এবং টেস্টিং প্রস্তুতি সরবরাহ করে, যাতে আপনি আপনার এপ্লিকেশনটি ডেভেলপ এবং টেস্ট করতে পারেন।
    "ionic capacitor run" কমান্ডটি এপ্লিকেশন ডেভেলপমেন্ট প্রস্তুতি করতে এবং এপ্লিকেশনটি সম্প্রদান প্ল্যাটফর্মে ইনস্টল করতে সাহায্য করে, যাতে আপনি আপনার ডেভেলপমেন্ট কার্যক্রম সম্পাদনা করতে এবং টেস্ট করতে পারেন।


11.1 > ionic capacitor run android
    ১১.১ > "ionic capacitor run android" কমান্ডটি আপনার Ionic এপ্লিকেশনটি ডেভেলপমেন্ট এবং টেস্টিং উদ্দেশ্যে Android প্ল্যাটফর্মে ইনস্টল করতে ব্যবহার হয়। এই কমান্ডটি ডেভেলপমেন্ট এবং টেস্ট প্রসেসের জন্য ব্যবহার হয় এবং আপনার Ionic এপ্লিকেশনটি একটি Android সিমুলেটরে বা ফিজিক্যাল Android ডিভাইসে চালাতে সাহায্য করে।

    যখন আপনি "ionic capacitor run android" কমান্ডটি ব্যবহার করেন, তখন নিম্নলিখিত কাজগুলি করা হয়:

    ডেভেলপমেন্ট এবং টেস্টিং উদ্দেশ্যে আপনার আপ্লিকেশনটি আপনার Android সিমুলেটরে ইনস্টল করা হয় বা যদি আপনি ফিজিক্যাল Android ডিভাইস সহ কোনো ডিভাইসে ইনস্টল করতে চান, তাদের জন্য সংকৃত করা হয়।
    ডেভেলপমেন্ট এবং টেস্টিং প্রস্তুতি সরবরাহ করা হয়, যাতে আপনি আপনার এপ্লিকেশনটি ডেভেলপ এবং টেস্ট করতে পারেন।
    আপনার ডেভেলপমেন্ট কার্যক্রম সম্পাদনা করতে সাহায্য করে, যেটি আপনার Android সিমুলেটরে বা ফিজিক্যাল Android ডিভাইসে ইনস্টল করা আপলোড করে সেটিংসের সাথে পরিচালনা করে।
    এই কমান্ডটি ডেভেলপমেন্ট এবং টেস্টিং উদ্দেশ্যে আপনার Android এপ্লিকেশনটি ইনস্টল করতে এবং চালাতে সাহায্য করে যাতে আপনি সরাসরি আপনার Android ডিভাইসে বা সিমুলেটরে এপ্লিকেশনটি পরীক্ষা করতে পারেন।



11.2 > ionic capacitor run android -l --external
    ১১.২ > ionic capacitor run android -l --external এই কমান্ডটি একটি Ionic অ্যাপ্লিকেশন ডেভেলপমেন্টে ব্যবহৃত হয়। এই কমান্ডটির মাধ্যমে আপনি আপনার Ionic অ্যাপ্লিকেশনটি এন্ড্রোয়েড ডিভাইসে রান করতে পারেন এবং সেটিংস লাইভ আপডেট করতে পারেন। এটি নিম্নলিখিত উপ-কমান্ডগুলির সাথে ব্যবহৃত হতে পারে:

    android: এই সাব-কমান্ডটি দ্বারা আপনি আপনার Ionic অ্যাপ্লিকেশনটি এন্ড্রোয়েড প্ল্যাটফর্মে রান করতে বলেন।
    -l বা --livereload: এই স্বিচটি সহ কমান্ডটি চালানোর ফলে আপনার কোড পরিবর্তন করার সাথে সাথে অ্যাপ্লিকেশনটি নতুন লাইভ রিলোড হবে, যাতে আপনি রান করানো অ্যাপটি পরিবর্তনের পরিণাম দেখতে পারেন।
    --external: এই স্বিচটি সহ কমান্ডটি চালানোর ফলে আপনার অ্যাপটি স্থানীয় ডিভাইসে রান না করে, একটি বাহ্যিক ডিভাইসে রান করতে দেওয়া হবে, যেখান থেকে আপনি অ্যাপটি টেস্ট করতে পারেন।
    এই কমান্ডটি ডেভেলপমেন্ট প্রসেস কে সহজ করে এবং কোড পরিবর্তনের সাথে সাথে পরিণাম দেখার জন্য উপকারী হতে পারে, এবং এটি আপনার অ্যাপটি ডেভেলপ করার সময় সহায়ক হতে পারে যখন আপনি নতুন ফিচার যোগ করতে এবং টেস্ট করতে চান।



12 > adb devices
    ১২ > adb devices একটি Android Debug Bridge (ADB) কমান্ড হলো, যা Android ডিভাইস অথবা এমুলেটর যেগুলি আপনার কম্পিউটারে সংযুক্ত আছে তা পর্যবেক্ষণ করে সংজ্ঞান করে। এটি একটি ডিভাইস অথবা এমুলেটর আপনার মোবাইল অ্যাপ্লিকেশন ডেভেলপমেন্টের সময় অত্যন্ত গুরুত্বপূর্ণ হতে পারে, কারণ এটি ডিভাইসে অ্যাপ্লিকেশন ইনস্টল করার জন্য ব্যবহার হয় এবং ডিভাইসে ডেভেলপমেন্ট মোডে সময় করে ডেভেলপারের মধ্যে অ্যাপ্লিকেশন টেস্ট করার সুযোগ সরবরাহ করে।

    adb devices কমান্ডটি চালানোর ফলে, এটি সংযুক্ত ডিভাইস এবং এমুলেটরের তালিকা দেখাবে যেখানে প্রতিটি ডিভাইসের সিরিয়াল নম্বর এবং ডিভাইসের ধরণ বা স্টেটাস উল্লেখ থাকবে। ডিভাইস যদি সঠিকভাবে চলছে এবং সংযুক্ত থাকে, তাহলে এই কমান্ডের আউটপুটে দেখা যাবে।

    উদাহরণ:

    arduino
    Copy code
    List of devices attached
    emulator-5554   device
    1234abcd        device
    এই উদাহরণে, আপনি দেখতে পাচ্ছেন যে দুটি ডিভাইস (একটি এমুলেটর এবং একটি ফিজিক্যাল ডিভাইস) সংযুক্ত আছে এবং ডেভাইস সিরিয়াল নম্বর সহ স্টেটাস দেখা যাচ্ছে।

    যদি adb devices কমান্ড চালানোর পরে কোন ডিভাইস বা এমুলেটর দেখা না দেওয়া থাকে, তবে এটি ডিভাইস বা এমুলেটরটি ঠিকভাবে চালানো হয়নি বা ডিভাইস ড্রাইভার সঠিকভাবে ইনস্টল করা হয়নি এমন কিছু সমস্যা সূচনা করতে পারে।


13 > show error end solve this steps
    The error message you're encountering indicates that there is a Java version compatibility issue in your Android project. The Android Gradle plugin is expecting Java 17, but your current JDK version is Java 11.

    To resolve this issue, you can follow these steps:

    Install Java 17:

    You need to install Java 17 on your system if it's not already installed. You can download and install it from the official Oracle website or use an OpenJDK distribution. Make sure to set up the environment variables correctly.

    Update your JAVA_HOME environment variable:

    After installing Java 17, you should update your JAVA_HOME environment variable to point to the directory where Java 17 is installed. You can do this by going to your system's environment variables settings and editing the JAVA_HOME variable.

    Configure Gradle to use Java 17:

    You can configure Gradle to use Java 17 for your Android project by adding the following lines to your project's gradle.properties file:

    javascript
    Copy code
    org.gradle.java.home=/path/to/your/java17
    Replace /path/to/your/java17 with the actual path to your Java 17 installation.

    Sync Gradle:

    After making these changes, sync your Gradle project again by clicking the "Sync Project with Gradle Files" button in your IDE, or by running the ./gradlew script in your project's root directory.

    Rebuild your Android project:

    Finally, try running your Capacitor project again by executing the necessary commands. It should now use Java 17 and hopefully, the build will succeed.

    After following these steps, if you encounter any other issues or errors, you can provide more details for further assistance.




    User
    Java 17 এর কোন ভার্সন টি নামাতে হবে?
    ChatGPT
    Java 17 এর official নামটি "Java 17" হলো। অফিসিয়ালি, Oracle এবং OpenJDK উভয় ইমপ্লিমেন্টেশনে এটি "Java 17" হিসেবে পরিচিত করা হয়েছে।

    আপনি যদি কোন ডিস্ট্রিবিউশনের জন্য Java 17 ইনস্টল করতে যাচ্ছেন, তাহলে সাধারণভাবে সেই ডিস্ট্রিবিউশনের ওয়েবসাইট থেকে ডাউনলোড করতে পারেন এবং সেটি নামাতে স্যাগেস্ট করা "Java 17" অথবা "JDK 17"।

    আপনি কোন IDE বা কমান্ড লাইন থেকে এই ইনস্টল করা JDK ব্যবহার করতে পারেন যতে আপনার প্রজেক্ট Java 17 এর সাথে কম্প্যাটিবল হয়।




    User
    কমান্ড লাইন থেকে কি ভাবে ইনস্টল করবো?
    ChatGPT
    কমান্ড লাইন থেকে Java 17 ইনস্টল করার জন্য নিম্নলিখিত পদক্ষেপগুলি অনুসরণ করতে হবে:

    ডাউনলোড করুন:
    প্রথমে, আপনি আপনার প্রাথমিক কমান্ড লাইন টারমিনাল বা কনসোল উইন্ডো খুলুন এবং নিম্নলিখিত কমান্ড টি ব্যবহার করে ওপেনজিডিকের সাথে সাথে ডাউনলোড করতে পারেন:

    bash
    Copy code
    wget https://download.java.net/java/GA/jdk17/0d483333a00540d886896b29f96e9492/35/GPL/openjdk-17_linux-x64_bin.tar.gz
    অথবা

    bash
    Copy code
    curl -O https://download.java.net/java/GA/jdk17/0d483333a00540d886896b29f96e9492/35/GPL/openjdk-17_linux-x64_bin.tar.gz
    এই কমান্ডগুলির মাধ্যমে সর্বশেষ Java 17 এর লিঙ্ক থেকে জিডিকে ডাউনলোড করবেন।

    আরক্ষণ করুন:
    ফাইলটি ডাউনলোড হলে, এটি আপনার সিস্টেমে আরক্ষণ করুন।

    আনটার টারমিনাল থেকে ইনস্টল করুন:
    নিম্নলিখিত কমান্ডটি ব্যবহার করে জিডিকে আনটার টারমিনাল থেকে ইনস্টল করুন:

    bash
    Copy code
    sudo tar -xzvf openjdk-17_linux-x64_bin.tar.gz -C /usr/local/
    এই কমান্ডটি জিডিকে আপনার সিস্টেমে /usr/local/ ডিরেক্টরিতে ইনস্টল করবে।

    জাভা ভার্সন চয়ন করুন:
    ইনস্টলেশন শেষ হলে, আপনি নিম্নলিখিত কমান্ড দিয়ে জাভা ভার্সন চয়ন করতে পারেন:

    bash
    Copy code
    sudo update-alternatives --install /usr/bin/java java /usr/local/jdk-17/bin/java 1
    sudo update-alternatives --install /usr/bin/javac javac /usr/local/jdk-17/bin/javac 1
    ডিফল্ট জাভা ভার্সন চয়ন করুন:
    ডিফল্ট জাভা ভার্সন হিসেবে Java 17 চয়ন করতে নিম্নলিখিত কমান্ডটি ব্যবহার করুন:

    sql
    Copy code
    sudo update-alternatives --config java
    এটি আপনাকে একটি মেনু দেখাবে যেখানে আপনি Java 17 চয়ন করতে পারবেন।

    সফলভাবে ইনস্টল হয়েছে তা পরীক্ষা করুন:
    আপনি ইনস্টলেশন সফলভাবে সম্পন্ন হয়েছে কিনা নিম্নলিখিত কমান্ডটি ব্যবহার করে চেক করতে পারেন:

    Copy code
    java -version
    এটি আপনার ইনস্টল করা Java ভার্সন দেখাবে।

    এই পদক্ষেপগুলি অনুসরণ করার পর, আপনি সফলভাবে Java 17 ইনস্টল করা হবে এবং আপনার প্রজেক্ট সেটিংসে সেট করতে পারবেন।




